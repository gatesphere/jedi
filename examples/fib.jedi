// jedi programming language
// Jacob M. Peck
// 20120105

// Fibonacci number generator example

// load the jedi language
doFile("../src/jedi.io")

// get nth fib number (not jedi style... this is partially Io)
n := System args at(1)
if(n == nil,
  echo("usage:\n  io fib.jedi n\nwill calculate the nth Fibonacci number.");
  die(EndSymbol)
)
n = n asNumber round 

// define the meditation
fib_machine := Meditation clone

// define the contemplations
start := Contemplation clone setBody(block(x, x))
talk := Contemplation clone setBody(block(x, echo(x)))
end := Contemplation clone setBody(block(x, die(x)))

// define the disturbances
calc := Disturbance clone 
calc setFilter(
  block(x,
    //writeln("calc received: " .. x);
    if(x != nil, 
      x third != 0,
      false
    )
  ) 
)
calc setBody(
  block(x,
    //writeln("calc: " .. x);
    tuple(x second, x second + x first, x third - 1)
  )
)
calc setDestination(start)

done := Disturbance clone 
done setBody(
  block(x,
    x second
  )
) 
done setDestination(talk)

bye := Disturbance clone setBody(block(x, EndSymbol)) setDestination(end)

// register the disturbances
start register(calc) register(done)
talk register(bye)

// register the contemplations
fib_machine register(start) register(talk) register(end)

// add inputs
fib_machine addInput(tuple(1,1,n))

// register the meditation
Clock register(fib_machine)

// start the clock
Clock start
